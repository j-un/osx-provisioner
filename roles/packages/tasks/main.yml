---
- name: Update Homebrew
  homebrew: update_homebrew=yes

# brew
- name: Install/Upgrade Homebrew packages for all env
  homebrew: >
    name={{ item.name }}
    state={{ item.state | default('latest') }}
    install_options={{
      item.install_options | default() | join(',')
      if item.install_options is not string
      else item.install_options
    }}
  with_items: "{{ homebrew_packages }}"
  register: brew_result

- name: Install/Upgrade Homebrew packages for work
  homebrew: >
    name={{ item.name }}
    state={{ item.state | default('latest') }}
    install_options={{
      item.install_options | default() | join(',')
      if item.install_options is not string
      else item.install_options
    }}
  with_items: "{{ homebrew_packages_work }}"
  register: brew_result
  when: env == "work"

- name: Install/Upgrade Homebrew packages for home
  homebrew: >
    name={{ item.name }}
    state={{ item.state | default('latest') }}
    install_options={{
      item.install_options | default() | join(',')
      if item.install_options is not string
      else item.install_options
    }}
  with_items: "{{ homebrew_packages_home }}"
  register: brew_result
  when: env == "home"

# cask
- name: Install/Upgrade Homebrew Cask packages for all env
  homebrew_cask: name={{ item.name }} state={{ item.state|default('installed') }} install_options=force
  with_items: "{{ homebrew_cask_packages }}"
  register: cask_result
  ignore_errors: True
  changed_when: False

- name: Install/Upgrade Homebrew Cask packages for work
  homebrew_cask: name={{ item.name }} state={{ item.state|default('installed') }} install_options=force
  with_items: "{{ homebrew_cask_packages_work }}"
  register: cask_result
  ignore_errors: True
  changed_when: False
  when: env == "work"

- name: Install/Upgrade Homebrew Cask packages for home
  homebrew_cask: name={{ item.name }} state={{ item.state|default('installed') }} install_options=force
  with_items: "{{ homebrew_cask_packages_home }}"
  register: cask_result
  ignore_errors: True
  changed_when: False
  when: env == "home"

# gem
- name: Install/Upgrade gem packages
  gem: name={{ item.name }} state={{ item.state|default('latest') }}
  with_items: "{{ gem_packages }}"

# npm
- name: Check brew list node
  shell: brew list --formula | grep node
  register: node_is_installed
  ignore_errors: True
  changed_when: False

- name: Install/Upgrade npm packages
  npm: name={{ item.name }} state={{ item.state|default('latest') }} global={{ item.global|default('yes') }}
  with_items: "{{ npm_packages }}"
  when: node_is_installed != ""
  ignore_errors: True
  changed_when: False

- name: Install/Upgrade pip packages
  pip: name={{ item.name }} state={{ item.state|default('latest') }}
  with_items: "{{ pip_packages }}"
